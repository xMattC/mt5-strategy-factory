from pathlib import Path
from meta_strategist.utils import load_config_from_yaml, check_and_validate_config
from meta_strategist.optimise_stage.stage_config import get_stage
from meta_strategist.optimise_stage import Optimiser
from meta_strategist.pipelines.trend_following.stages import STAGES

def main():
    """ Entry point for executing a full MT5 optimisation pipeline.

    Loads and validates the configuration file for the current run, then sequentially executes all predefined
    optimisation stages (e.g., Trigger, Conformation, Volume, Exit, Trendline) using the same configuration.

    Assumes the config file is named {{ run_name }}.yaml and lives next to
    this script.
    """

    # Load configuration YAML for this run
    config_path = Path(__file__).parent / "{{ run_name }}_config.yaml"
    config = load_config_from_yaml(config_path)
    check_and_validate_config(config)

    # Run each stage sequentially using the same config:

    stage_1 = get_stage(STAGES, "Trigger")
    Optimiser(config=config, stage=stage_1).run_stage_optimisations()

    # stage_2 = get_stage("Conformation")
    # Optimiser(config=config, stage=stage_2).run_stage_optimisations()

    # stage_3 = get_stage("Volume")
    # Optimiser(config=config, stage=stage_3).run_stage_optimisations()

    # stage_4 = get_stage("Exit")
    # Optimiser(config=config, stage=stage_4).run_stage_optimisations()

    # stage_5 = get_stage("Trendline")
    # Optimiser(config=config, stage=stage_5).run_stage_optimisations()


if __name__ == "__main__":
    main()
